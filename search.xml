<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>android studio3.1中解决Unable to resolve dependency for &#39;:app@debug/compileClasspath&#39;问题</title>
      <link href="/2018/06/06/2018-06-07-gradle-offline-sucks/"/>
      <url>/2018/06/06/2018-06-07-gradle-offline-sucks/</url>
      <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Unable to resolve dependency for :app@dexOptions/compileClasspath': Could not resolve project :xxx</span><br></pre></td></tr></table></figure><p>项目需要，引入了smartRefreshLayout，在添加到gradle依赖，执行编译后，控制台出现上面的错误，下面纪录下解决过程。</p><p>首先，交代下当前开发环境，尤其是gradle，需要注意版本之间的差异</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Android studio:3.1</span><br><span class="line">JDK:1.8</span><br><span class="line">gradle:4.4</span><br></pre></td></tr></table></figure><p>首先检查了下依赖是否有缺少，然后google了下，在stackoverflow上找到下面的解决办法：</p><p>1、检查gradle是否打开了离线模式，如果打开了，关闭再同步编译gradle;</p><p>2、统一module的buildType；</p><p>测试了下方法1，解决问题。</p><p>检查了下module的buildType，并没有新增，所以方法2没用。</p><p>参考连接：<a href="https://stackoverflow.com/questions/46949622/android-studio-3-0-unable-to-resolve-dependency-for-appdexoptions-compileclas" target="_blank" rel="noopener">https://stackoverflow.com/questions/46949622/android-studio-3-0-unable-to-resolve-dependency-for-appdexoptions-compileclas</a></p>]]></content>
      
      <categories>
          
          <category> android </category>
          
          <category> errorfixed </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gradle </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>android各种资源网站</title>
      <link href="/2018/06/06/2017-07-10-android-sources-urls/"/>
      <url>/2018/06/06/2017-07-10-android-sources-urls/</url>
      <content type="html"><![CDATA[<p>整理一下一些有用的资源网站以备不时之需要。持续更新~~</p><table><thead><tr><th></th><th>url</th><th>备注</th></tr></thead><tbody><tr><td>Android SDK</td><td><a href="https://androidsdkoffline.blogspot.tw/" target="_blank" rel="noopener">https://androidsdkoffline.blogspot.tw/</a></td><td>google源连接下载各版本的SDK资源</td></tr><tr><td>Android studio</td><td><a href="https://developer.android.google.cn/studio/archive.html" target="_blank" rel="noopener">https://developer.android.google.cn/studio/archive.html</a></td><td>各版本下载连接归档，包括稳定及预览版</td></tr><tr><td>AndroidDevTools</td><td><a href="http://www.androiddevtools.cn/" target="_blank" rel="noopener">http://www.androiddevtools.cn/</a></td><td>收集整理Android开发所需的Android SDK（最新的几个版本）、开发中用到的工具（最新的几个版本）、开发教程、免费的设计素材等。</td></tr><tr><td>PxCook</td><td><a href="http://www.fancynode.com.cn/pxcook" target="_blank" rel="noopener">http://www.fancynode.com.cn/pxcook</a></td><td>像素大厨，爽爆的标注工具，可以自由切换px，dp，pt</td></tr><tr><td>avocode</td><td><a href="https://avocode.com/" target="_blank" rel="noopener">https://avocode.com/</a></td><td>切图标注，可生成css样式代码，同时还支持多人协作</td></tr></tbody></table><p>最后更新时间：2018-6-6</p>]]></content>
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> 资源网站 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>android studio无法debug的几个解决思路</title>
      <link href="/2017/07/28/2017-07-28-solution-about-unable-to-debug/"/>
      <url>/2017/07/28/2017-07-28-solution-about-unable-to-debug/</url>
      <content type="html"><![CDATA[<p>明明已经设定了断点，可就是不能进入断点，为啥呢？见下文：</p><h3 id="1、minifyEnabled为true"><a href="#1、minifyEnabled为true" class="headerlink" title="1、minifyEnabled为true"></a>1、minifyEnabled为true</h3><p>检查一下gradle中minifyEnabled的值：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">true</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;</span><br><span class="line">            minifyEnabled <span class="literal">true</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>首先看下minifyEnabled究竟是什么鬼：</p><blockquote><p>minifyEnabled，即是否启动压缩，压缩范围包括项目所有代码以及资源文件。<br>此字段设置为true，即启用压缩，此时 ProGuard 将会检测项目中未被使用的属性，方法，类以及指令，并且使用短名称替换指定的文件名，方法名和字段名。<br>这样做可以减少apk体积，变相解决64k方法限制问题，并且也使用apk不容易被逆向破解。</p></blockquote><p>所以问题来了，实际上方法名已经被改了，这样一来，debugger也就找不到原来的方法，断点自然也就失效了。</p><h3 id="2、android-process-”-remote”"><a href="#2、android-process-”-remote”" class="headerlink" title="2、android:process=”:remote”"></a>2、android:process=”:remote”</h3><p>具体见：<a href="http://blog.csdn.net/wsgqp/article/details/51946760" target="_blank" rel="noopener">http://blog.csdn.net/wsgqp/article/details/51946760</a></p><h3 id="3、方法并未被执行"><a href="#3、方法并未被执行" class="headerlink" title="3、方法并未被执行"></a>3、方法并未被执行</h3><p>InterfaceA中有个doSth()，ClassB，ClassC，ClassD分别实现InterfaceA，ClassB中的doSth()设置了断点，但是一直触发不了，此时不防检查一下，引用doSth()的对象，实际上是ClassB呢，还是ClassC或ClassD..</p><p>目前遇到过的情况总结如上。以后有遇到再继续补充。</p>]]></content>
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> 无法debug </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>centos7中安装andrdoid编译环境</title>
      <link href="/2017/06/26/2017-06-26-android-build-enviroment/"/>
      <url>/2017/06/26/2017-06-26-android-build-enviroment/</url>
      <content type="html"><![CDATA[<p>继续纪录~~~~<br>本文描述了大centos7.0中如何部署andrdoid编译环境，附件下载连接：<a href="http://pan.baidu.com/s/1nv6wV3N" target="_blank" rel="noopener">http://pan.baidu.com/s/1nv6wV3N</a> 密码：m0lm<br>附件包括：</p><ul><li>android-sdk-linux.tar： androidSDK压缩包，包括了extra，platform（21，22），build tools(21.0.0，21.1.1，22.0.0，22.0.1)。其他版本的platform，build tools需要另外下载安装;</li><li>gradle-2.14.1-all.zip：当前使用的gradle版本，其他版本需要另外下载安装; </li><li>gradleDemo.zip：用于测试android编译环境是否正常安装; </li><li>HOW-TO-USE.md：安装说明文档。</li></ul><h2 id="Step-1-安装android-SDK"><a href="#Step-1-安装android-SDK" class="headerlink" title="Step 1. 安装android SDK"></a>Step 1. 安装android SDK</h2><h3 id="命令行安装"><a href="#命令行安装" class="headerlink" title="命令行安装"></a>命令行安装</h3><p>1）android sdk 工具包的一些命令行工具是基于32位系统的，在64为平台运行32程序必须安装 一些依赖库,方法如下：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install glibc*.i686</span><br><span class="line">yum install zlib*.i686</span><br><span class="line">yum install libstdc++.so.6</span><br></pre></td></tr></table></figure></p><p>2）解压android-sdk-linux.tar；<br>3）将android-sdk-linux目录添加到环境变量中，确保终端能调用android SDK的一些命令，在/etc/profile中末尾增加下面内容：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ANDROID_HOME=<span class="variable">$HOME</span>/android-sdk-linux  --当前android-sdk-linux目录</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/tools:<span class="variable">$ANDROID_HOME</span>/platform-tools"</span></span><br><span class="line"><span class="built_in">export</span> ANDROID_HOME</span><br></pre></td></tr></table></figure></p><p>4）使环境变量生效:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></p><p>5）准备安装sdk工具，首先执行下面命令：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android list sdk --all</span><br></pre></td></tr></table></figure></p><p>正常输出的话会有下面的内容：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">Packages available <span class="keyword">for</span> installation or update: 182</span><br><span class="line"> 1- Android SDK Tools, revision 25.2.5</span><br><span class="line"> 2- Android SDK Platform-tools, revision 26</span><br><span class="line"> 3- Android SDK Build-tools, revision 26</span><br><span class="line"> 4- Android SDK Build-tools, revision 25.0.3</span><br><span class="line"> 5- Android SDK Build-tools, revision 25.0.2</span><br><span class="line"> 6- Android SDK Build-tools, revision 25.0.1</span><br><span class="line"> 7- Android SDK Build-tools, revision 25</span><br><span class="line"> 8- Android SDK Build-tools, revision 24.0.3</span><br><span class="line"> 9- Android SDK Build-tools, revision 24.0.2</span><br><span class="line">10- Android SDK Build-tools, revision 24.0.1</span><br><span class="line">11- Android SDK Build-tools, revision 24</span><br><span class="line">12- Android SDK Build-tools, revision 23.0.3</span><br><span class="line">13- Android SDK Build-tools, revision 23.0.2</span><br><span class="line">14- Android SDK Build-tools, revision 23.0.1</span><br><span class="line">15- Android SDK Build-tools, revision 23 (Obsolete)</span><br><span class="line">16- Android SDK Build-tools, revision 22.0.1</span><br><span class="line">17- Android SDK Build-tools, revision 22 (Obsolete)</span><br><span class="line">18- Android SDK Build-tools, revision 21.1.2</span><br><span class="line">19- Android SDK Build-tools, revision 21.1.1 (Obsolete)</span><br><span class="line">20- Android SDK Build-tools, revision 21.1 (Obsolete)</span><br><span class="line">21- Android SDK Build-tools, revision 21.0.2 (Obsolete)</span><br><span class="line">22- Android SDK Build-tools, revision 21.0.1 (Obsolete)</span><br><span class="line">23- Android SDK Build-tools, revision 21 (Obsolete)</span><br><span class="line">24- Android SDK Build-tools, revision 20</span><br><span class="line">25- Android SDK Build-tools, revision 19.1</span><br><span class="line">26- Android SDK Build-tools, revision 19.0.3 (Obsolete)</span><br><span class="line">27- Android SDK Build-tools, revision 19.0.2 (Obsolete)</span><br><span class="line">28- Android SDK Build-tools, revision 19.0.1 (Obsolete)</span><br><span class="line">29- Android SDK Build-tools, revision 19 (Obsolete)</span><br><span class="line">30- Android SDK Build-tools, revision 18.1.1 (Obsolete)</span><br><span class="line">31- Android SDK Build-tools, revision 18.1 (Obsolete)</span><br><span class="line">32- Android SDK Build-tools, revision 18.0.1 (Obsolete)</span><br><span class="line">33- Android SDK Build-tools, revision 17 (Obsolete)</span><br><span class="line">34- Documentation <span class="keyword">for</span> Android SDK, API 24, revision 1</span><br><span class="line">35- SDK Platform Android 8.0.0, API 26, revision 1</span><br><span class="line">36- SDK Platform Android 7.1.1, API 25, revision 3</span><br><span class="line">37- SDK Platform Android 7.0, API 24, revision 2</span><br><span class="line">38- SDK Platform Android 6.0, API 23, revision 3</span><br><span class="line">39- SDK Platform Android 5.1.1, API 22, revision 2</span><br><span class="line">40- SDK Platform Android 5.0.1, API 21, revision 2</span><br><span class="line">41- SDK Platform Android 4.4W.2, API 20, revision 2</span><br><span class="line">42- SDK Platform Android 4.4.2, API 19, revision 4</span><br><span class="line">43- SDK Platform Android 4.3.1, API 18, revision 3</span><br><span class="line">44- SDK Platform Android 4.2.2, API 17, revision 3</span><br><span class="line">45- SDK Platform Android 4.1.2, API 16, revision 5</span><br><span class="line">46- SDK Platform Android 4.0.3, API 15, revision 5</span><br><span class="line">47- SDK Platform Android 4.0, API 14, revision 4</span><br><span class="line">......</span><br></pre></td></tr></table></figure></p><p><strong> 注意：实际输出的序号和版本未必和上面的一样！不同时间会有更新 </strong></p><p>这里包括不同的Android API 版本和不同的构建工具，选择你想要安装项目的序号，首次安装建议安装build tools 17及以上，及 android 4.2.2以上的SDK，所以选择序号 “1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44”，执行命令如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android update sdk -u -a -t --proxy-host ubuntu.buct.edu.cn --proxy-port 80 “1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44”</span><br></pre></td></tr></table></figure><p>安装的时候会提示接受<code>license</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Do you accept the license <span class="string">'android-sdk-preview-license-52d11cd2'</span> [y/n]:</span><br></pre></td></tr></table></figure><p>选择y同意之后才能继续安装，等待安装成功即可。</p><p>可能会出现的错误：</p><p>运行命令android list sdk 的时候，都会卡在</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Fetching https://dl.google.com/android/repository/addons_list-2.xml</span><br></pre></td></tr></table></figure><p>此时可以通过两个代理参数：</p><ul><li><code>--proxy-host</code> 设置代理的host地址</li><li><code>--proxy-port</code>设置代理的端口</li></ul><p>可以通过代理使用国内的Android镜像，国内的Android代理镜像服务器：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://mirrors.neusoft.edu.cn 端口：80</span><br><span class="line">http://ubuntu.buct.edu.cn/ 端口：80</span><br><span class="line">http://ubuntu.buct.cn/ 端口：80</span><br><span class="line">http://sdk.gdgshanghai.com 端口：8000</span><br><span class="line">IPv6: http://ubuntu.buct6.edu.cn/ 端口：80</span><br></pre></td></tr></table></figure><p>即：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android list sdk --proxy-host mirrors.zzu.edu.cn --proxy-port 80 --all</span><br></pre></td></tr></table></figure><p>然而，可能是我自己的网络原因，测试了下，这几个代理并不太稳定，在fetching的时候，偶尔会返回拒绝访问或者url重置。</p><p>如果遇到了的话，建议还是通过离线下载sdk包来安装吧。</p><h3 id="离线下载安装"><a href="#离线下载安装" class="headerlink" title="离线下载安装"></a>离线下载安装</h3><p>离线下载连接如下：</p><ul><li>build tools: <a href="https://androidsdkoffline.blogspot.com/p/android-sdk-build-tools.html" target="_blank" rel="noopener">https://androidsdkoffline.blogspot.com/p/android-sdk-build-tools.html</a></li><li>platform tools: <a href="https://androidsdkoffline.blogspot.hk/p/android-sdk-platform-tools.html" target="_blank" rel="noopener">https://androidsdkoffline.blogspot.hk/p/android-sdk-platform-tools.html</a></li><li>sdk tools: <a href="https://androidsdkoffline.blogspot.hk/p/android-sdk-tools.html" target="_blank" rel="noopener">https://androidsdkoffline.blogspot.hk/p/android-sdk-tools.html</a></li></ul><p>选择相应的版本，下载然后解压到sdk相应的目录中即可。</p><h2 id="Step-2-安装Gradle工具"><a href="#Step-2-安装Gradle工具" class="headerlink" title="Step 2.安装Gradle工具"></a>Step 2.安装Gradle工具</h2><p>1）解压gradle-2.14.1-all.zip，并创建一个软连接gradle：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s gradle-2.14.1 gradle</span><br></pre></td></tr></table></figure><p>2）将gradle目录添加到环境变量中，确定终端能调用gradle：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRADLE_HOME=<span class="variable">$HOME</span>/gradle</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GRADLE_HOME</span>/bin</span><br></pre></td></tr></table></figure></p><p>3）使环境变量生效：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></p><p>4）验证是否安装正常：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle -v</span><br></pre></td></tr></table></figure></p><p>能看到gradle版本信息即为安装正常；</p><h2 id="Step3-验证编译环境是否正常安装"><a href="#Step3-验证编译环境是否正常安装" class="headerlink" title="Step3.验证编译环境是否正常安装"></a>Step3.验证编译环境是否正常安装</h2><p>1）解压gradleDemo.zip，进入gradleDemo<br>2）运行：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle build</span><br></pre></td></tr></table></figure></p><p>3）进入 <code>app/build/outputs/apk</code>，检查是否有apk文件，有则下载安装到手机，如果能正常安装，则说明android编译环境正常。</p>]]></content>
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> andrdoid编译环境 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>安装kotlin命令行编译器</title>
      <link href="/2017/06/15/2017-06-15-kotlin-command-line-compiler/"/>
      <url>/2017/06/15/2017-06-15-kotlin-command-line-compiler/</url>
      <content type="html"><![CDATA[<p>官方参考教程网址：<a href="https://kotlinlang.org/docs/tutorials/command-line.html" target="_blank" rel="noopener">https://kotlinlang.org/docs/tutorials/command-line.html</a></p><p>本文主要是纪录一下在安装过程遇到的问题及解决办法。Let’s go!</p><p>环境：win10，jdk1.8.0_91，已配置JAVA_HOME等java相关环境变量。</p><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><p>1.按照官网教程的说明，去github里下载了zip压缩包，解压到<code>D:\Program Files</code></p><p>2.设置环境变量KOTLIN_HOME，值为<code>D:\Program Files\kotlin-compiler-1.1.2-5\kotlinc</code></p><p>3.在环境变量变量Path最后增加 <code>%KOTLIN_HOME%\bin;</code></p><p>4.好了，到了第3步的时候貌似一切都没问题了。那么，验证一下是否安装正常。打开cmd，执行<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kotlinc -<span class="built_in">help</span></span><br></pre></td></tr></table></figure></p><p>结果：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\cycle&gt;kotlinc -<span class="built_in">help</span></span><br><span class="line">错误: 找不到或无法加载主类 org.jetbrains.kotlin.preloading.Preloader</span><br></pre></td></tr></table></figure></p><p>What？！难道是少执行了什么？又看了一次官网教程</p><blockquote><p>Unzip the standalone compiler into a directory and optionally add the bin directory to the system path. The bin directory contains the scripts needed to compile and run Kotlin on Windows, OS X and Linux.</p></blockquote><p> 大概可以理解为解压独立编辑器到一个目录中，然后，可以将bin目录增加到系统path中，这个bin里包括了一些在window,osx和linux下需要编译和执行的脚本。</p><p> 漏了初始化？打开bin目录，看到有几个kotlin.bat,kotlinc.bat,kotlinc-js.bat,kotlinc-jvm.bat等几个文件。<br>  都用notepad++打开看了下，kotlin.bat,kotlinc-js.bat,kotlinc-jvm.bat三个都是调用kotlinc.bat的。</p><p>唔，试一下直接执行kotlinc.bat看看，结果，返回了同样的错误。</p><p> google了下错误信息，然后并没有得到以什么有效信息，再看了下错误信息，突然想，不会和路径有关吧。<br>  删除目录，然后，重新压缩到<code>D:\</code> 下<br>  将KOTLIN_HOME改为<br>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\kotlin-compiler</span><br></pre></td></tr></table></figure></p><p>  重新打开一个cmd，重新执行<br>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kotlinc -<span class="built_in">help</span></span><br></pre></td></tr></table></figure></p><p>  结果，返回正常了！</p><p>  对比了一下前后的目录，只能发现只是一个空格的问题，难道就是空格了吗？为了验证这个假设，再一次重新解压到另外一个带空格和不带空格的目录路径下，</p><p>  结果，不带空格下的正常！而不带空格的，仍报同样的错误！</p><p>  在小密圈里看到ZeroyiQ童鞋也遇到了同样的问题，他改用git bash 可以正常执行，由于本机没有git bash，就没测试了。如果大伙有其他的解决办法欢迎提出。</p>]]></content>
      
      <categories>
          
          <category> kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kotlin </tag>
            
            <tag> kotlin命令行 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>自定义TextView的字体</title>
      <link href="/2017/04/12/2017-04-12-custom-textview-font/"/>
      <url>/2017/04/12/2017-04-12-custom-textview-font/</url>
      <content type="html"><![CDATA[<p>最近在一个比较简洁的屏保，屏幕中间只显示当前日期和时间<br>其中时间需要特别大的字号，但是用系统默认的会发现当设置了大字号后，字体变得非常粗，严重影响美观。</p><p>网上搜索了下，决定换一个字体,下面是部分代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Typeface typeface  = Typeface.createFromAsset(getAssets(),<span class="string">"font/PingFang ExtraLight.ttf"</span>);</span><br><span class="line">mTextViewTime = (TextView) findViewById(R.id.tv_time);</span><br><span class="line">mTextViewTime.setTypeface(typeface);</span><br></pre></td></tr></table></figure><p>需要注意一点：字体本身都带有一定的padding值！所以布局中设置比较大字号的时候，可能会受此影响，导致文字显示不出来，或者影响布局。<br>解决办法：设置<code>android:includeFontPadding=&quot;false&quot;</code> ,用来设置文本框是否包含顶部和底部留白（左右两侧默认没有留白），将其设置为false，TextView就会取消留白。这样就避免了TextView导致UI出现差异！</p>]]></content>
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>切换到前台时FragmentViewPager内容缺失问题</title>
      <link href="/2017/04/11/2017-04-11-missing-fragment-viewpager/"/>
      <url>/2017/04/11/2017-04-11-missing-fragment-viewpager/</url>
      <content type="html"><![CDATA[<p>继续整理笔记。。。。。</p><p>#切换到前台时FragmentViewPager内容缺失问题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">recomandAdapter = <span class="keyword">new</span> RecomandFragmentPagerAdapter(getActivity().getSupportFragmentManager(), fragmentList);</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">recomandAdapter = <span class="keyword">new</span> RecomandFragmentPagerAdapter(getChildFragmentManager(), fragmentList);</span><br></pre></td></tr></table></figure><p>原因需要继续查资料</p>]]></content>
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> viewpager </tag>
            
            <tag> FragmentViewPager </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用jekyll过程中遇到的一些问题</title>
      <link href="/2017/04/11/2017-04-11-problems-in-using-jekyll/"/>
      <url>/2017/04/11/2017-04-11-problems-in-using-jekyll/</url>
      <content type="html"><![CDATA[<p>在使用jekyll过程中遇到的一些问题及解决方法;</p><h2 id="1-依赖的版本号不对："><a href="#1-依赖的版本号不对：" class="headerlink" title="1.依赖的版本号不对："></a>1.依赖的版本号不对：</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have already activated json 2.0.3, but your Gemfile requires json 1.8.6. Prepending `bundle <span class="built_in">exec</span>` to your <span class="built_in">command</span> may solve this. (Gem::LoadError)</span><br></pre></td></tr></table></figure><p> 这个问题是在下载了别人的jekyll后，运行<code>jekyll s</code> 后出现的。大概就是说：</p><blockquote><p>你已经在用2.0.3了，但是你的gemfile里却要1.8.6。所以在你的命令前增加<code>bundle exec</code>，即<code>bundle exec jekyll s</code>可以就可以解决这个问题了。</p></blockquote><p> 试了一下，的确是可以将jekyll运行起来了，但是根目录下却多了个GemFile.lock。打开后看到：</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> GEM  </span><br><span class="line">  remote: https://rubygems.org/</span><br><span class="line">  specs:</span><br><span class="line">    activesupport (4.2.7)</span><br><span class="line">      i18n (~&gt; 0.7)</span><br><span class="line">      json (~&gt; 1.7, &gt;= 1.7.7)</span><br><span class="line">      minitest (~&gt; 5.1)</span><br><span class="line">      thread_safe (~&gt; 0.3, &gt;= 0.3.4)</span><br><span class="line">      tzinfo (~&gt; 1.1)</span><br><span class="line">    addressable (2.5.1)</span><br><span class="line">      public_suffix (~&gt; 2.0, &gt;= 2.0.2)</span><br><span class="line">    coffee-script (2.4.1)</span><br><span class="line">      coffee-script-source</span><br><span class="line">      execjs</span><br><span class="line">    coffee-script-source (1.12.2)</span><br><span class="line">    colorator (1.1.0)</span><br><span class="line">    ethon (0.10.1)</span><br><span class="line">      ffi (&gt;= 1.3.0)</span><br><span class="line">    execjs (2.7.0)</span><br><span class="line">    faraday (0.12.0.1)</span><br><span class="line">......</span><br><span class="line">  json (1.8.6)</span><br><span class="line">    kramdown (1.13.2)</span><br><span class="line">    liquid (3.0.6)</span><br><span class="line">    listen (3.0.6)</span><br><span class="line">      rb-fsevent (&gt;= 0.9.3)</span><br><span class="line">      rb-inotify (&gt;= 0.9.7)</span><br></pre></td></tr></table></figure><p> 留意后面的<code>json (1.8.6)</code>,到这里就开始猜测是否就是这个版本号问题？将它改成<code>json (2.0.3)</code><br> 再重新运行jekyll，行了！</p>]]></content>
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vmware中修改ubuntu的分辨率</title>
      <link href="/2016/08/16/2015-07-07-change-ubuntu-resolution/"/>
      <url>/2016/08/16/2015-07-07-change-ubuntu-resolution/</url>
      <content type="html"><![CDATA[<p>vmware11.1.0中新安装好的ubuntu15.04,分辨率只有800*600,怎么看都不舒服,改之，具体如下：</p><pre><code>#终端中执行sudo gedit /etc/default/grub</code></pre><p>找到</p><pre><code>#GRUB_GFXMODE=640x480</code></pre><p>去掉注释,并改成自己想要的分辨率,小于主机的分辨率:</p><pre><code>GRUB_GFXMODE=1280x768</code></pre><p>保存,关闭,继续在终端中分别执行下面命令更新;</p><pre><code>echo FRAMEBUFFER=y | sudo tee /etc/initramfs-tools/conf.d/splashsudo update-initramfs -u -k all sudo update-grub</code></pre><p>重启一下虚拟机,就可以看到分辨率已经变了;</p>]]></content>
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何通过文件名从drawable文件夹中获取图片文件。</title>
      <link href="/2016/08/16/2016-08-16-get-image-from-drawable-directory/"/>
      <url>/2016/08/16/2016-08-16-get-image-from-drawable-directory/</url>
      <content type="html"><![CDATA[<p>从assets文件夹中加载图片，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * </span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> imageName 图片名称，不带后缀的，例如：test</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> imageView</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loadLocalImage</span><span class="params">(String imageName, ImageView imageView, Context context)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//得到application对象</span></span><br><span class="line">      ApplicationInfo appInfo = context.getApplicationInfo();</span><br><span class="line"><span class="comment">//得到该图片的id(name 是该图片的名字，"drawable"是该图片存放的目录，appInfo.packageName是包名)</span></span><br><span class="line">      <span class="keyword">int</span> resID = context.getResources().getIdentifier(imageName, <span class="string">"drawable"</span>, appInfo.packageName);</span><br><span class="line">      imageView.setBackgroundResource((resID));</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> drawable </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vmware中修改ubuntu的分辨率</title>
      <link href="/2016/08/16/2015-07-07-how-to-change-ubuntu-resolution-in-vmware/"/>
      <url>/2016/08/16/2015-07-07-how-to-change-ubuntu-resolution-in-vmware/</url>
      <content type="html"><![CDATA[<p>vmware11.1.0中新安装好的ubuntu15.04,分辨率只有800*600,怎么看都不舒服,改之，具体如下：</p><pre><code>#终端中执行sudo gedit /etc/default/grub</code></pre><p>找到</p><pre><code>#GRUB_GFXMODE=640x480</code></pre><p>去掉注释,并改成自己想要的分辨率,小于主机的分辨率:</p><pre><code>GRUB_GFXMODE=1280x768</code></pre><p>保存,关闭,继续在终端中分别执行下面命令更新;</p><pre><code>echo FRAMEBUFFER=y | sudo tee /etc/initramfs-tools/conf.d/splashsudo update-initramfs -u -k all sudo update-grub</code></pre><p>重启一下虚拟机,就可以看到分辨率已经变了;</p>]]></content>
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>分割catalina.log日志文件</title>
      <link href="/2015/07/03/2015-07-03-split-catalina-log/"/>
      <url>/2015/07/03/2015-07-03-split-catalina-log/</url>
      <content type="html"><![CDATA[<p>为了避免文件过大影响tomcat性能，同时方便查看日志，故分割该日志文件是很有必要的。</p><p>方法有很多，可以上网搜索一下，下面亲测可行的方法；</p><p>环境：centos5.9-64, tomcat7.0</p><p>打开tomcat/bin/catalina.sh，找到<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CATALINA_OUT=<span class="string">"$CATALINA_BASE"</span>/logs/catalina.out</span><br></pre></td></tr></table></figure></p><p>修改为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CATALINA_OUT=<span class="string">"$CATALINA_BASE"</span>/logs/catalina<span class="string">"-`date "</span>+%Y-%m-%d<span class="string">"`"</span>.out</span><br></pre></td></tr></table></figure></p><p>重启tomcat。done</p>]]></content>
      
      <categories>
          
          <category> tomcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
